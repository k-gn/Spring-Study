plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspaths // 5 버전부터 추가
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.querydsl:querydsl-jpa'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

//compileQuerydsl.doFirst { if(file(querydslDir).exists() ) delete(file(querydslDir)) }

// Lombok이 코드를 만들기 전에 QueryDsl 이 먼저 컴파일을 작업하여
// 롬복이 만들어낼 코드를 찾을수 없다고 에러가 발생할 수 있다.
// Lombok 작업후 QueryDsl 컴파일을 지시하도록 설정
//project.afterEvaluate {
//    project.tasks.compileQuerydsl.options.compilerArgs = [
//            "-proc:only",
//            "-processor", project.querydsl.processors() +
//                    ',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
//    ]
//}